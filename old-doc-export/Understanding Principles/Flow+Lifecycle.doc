Message-ID: <504220022.805.1564910192525.JavaMail.tcconfluence@etn-twinstone-1.mit.etn.cz>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_804_918846857.1564910192525"

------=_Part_804_918846857.1564910192525
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Flow Lifecycle</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>Flow Lifecycle</h1>
    <div class=3D"Section1">
        <h3 id=3D"FlowLifecycle-CreatingFlow">Creating Flow</h3>
<ol>
<li>Create Flow ID (flowId), it is an application deal, it is usually a dat=
abase ID, but that number is not important while processing flow</li>
<li>Create Flow Carter, it makes IFlowProcessor itself. If you need change =
Flow Carter object, you have to override the creator method.</li>
<li>Initialize flow, the flow must ever have an initial step. If there is a=
 default inital step in configuration, than it is used. Flow cannot start i=
n a step, that is not marked as initial.</li>
<li>If the initial step is a virtual step, than the step is processed until=
 a real step is reached.</li>
<li>Flow is waiting until a new transition is invoked.</li>
</ol>
<h4 id=3D"FlowLifecycle-FinishingFlow">Finishing Flow</h4>
<ul>
<li>A transition navigates flow to a final step. More then one step can be =
marked as final.</li>
<li>Flow cannot continue any more. If you invoke a transition on finished f=
low (flow in a final state), the FlowAlreadyFinishedException is thrown.</l=
i>
</ul>
<h3 id=3D"FlowLifecycle-RunningTransition">Running Transition</h3>
<ol>
<li>Invoke a transition by invokeTransition method</li>
<li>Flow is shifted to the target state of the transition</li>
<li>If the the new state is a virtual state, it is processed and continue t=
o step 1</li>
<li>Flow is waiting in a real state until a new transition is invoked</li>
</ol>
<h3 id=3D"FlowLifecycle-ProcessingVirtualStates">Processing Virtual States<=
/h3>
<p>Flow cannot stand by a virtual states. So a virtual state is ever proces=
sed to shift flow to a next state. Of course if it is a virtual state again=
, the process repeats until a real state is reached.</p>
<ol>
<li>Shift flow to (or start flow in)&nbsp; a virtual state</li>
<li>Process the virtual state and find a transition to shift flow the a nex=
t state</li>
<li>Shift flow to the next state and continue checks</li>
</ol>
<h4 id=3D"FlowLifecycle-InfiniteLoops">Infinite Loops</h4>
<ul>
<li>Flow can possibly has infinite loop(s).</li>
<li>It cannot be prevent during parsing XML</li>
<li>Max allowed flow steps can prevent flow to cycle inside, it is recommen=
ded to set that property to a real (big) value, not null that means unfinit=
e.</li>
<li>Virtual states are a danger of cycling the flow.</li>
</ul>
<h3 id=3D"FlowLifecycle-ProcessingListeners">Processing Listeners</h3>
<p>There can be defined more listener those are invoked in the following or=
der&gt;</p>
<ol>
<li>onFlowInitialized (invoked just once after initializing flow)</li>
<li>onTransitionStart (invoked on each transition)</li>
<li>onStateLeaving (invoked on each state)</li>
<li>createStateData (invoked on state that requires state data)</li>
<li>onStateEntry (invoked on each state)</li>
<li>persistFlowState (invoked only on presistable states)</li>
<li>onTransitionFinished (invoked on each transition)</li>
<li>onFlowFinished (invoked just once after reaching a final state)</li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_804_918846857.1564910192525--
